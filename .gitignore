# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log

# Ignore any .tfvars files that are generated automatically for each Terraform run. Most
# .tfvars files are managed as part of configuration and so should be included in
# version control.
#
# example.tfvars

# Ignore sensitive tfvars files containing secrets
terraform.tfvars
*.auto.tfvars
secrets.tfvars
*.secret.tfvars

# Allow environment-specific tfvars (these don't contain secrets)
!infrastructure/environments/*/terraform.tfvars

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
#
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
*tfplan*
tfplan
*.tfplan

# IntelliJ
.idea
*.ipr
*.iml
*.iws

# NetBeans
nb-configuration.xml

# Visual Studio Code
.vscode
.factorypath

# OSX
.DS_Store

# Vim
*.swp
*.swo

# patch
*.orig
*.rej

# Local environment
.env

# TLS Certificates
.certs/

# Terraform lock files (keep in version control but ignore if conflicts)
# .terraform.lock.hcl

# GitHub Actions artifacts and temporary files
destruction-archive/
pre-destroy-outputs.json
destroy-plan.txt
*.log

# Backup files
*.backup
*~

# Environment-specific files (if containing secrets)
# Note: Our environment tfvars are safe to commit as they don't contain secrets
# Uncomment if you add secret values to environment configs:
# infrastructure/environments/*/secrets.tfvars

# Temporary files
*.tmp
*.temp
